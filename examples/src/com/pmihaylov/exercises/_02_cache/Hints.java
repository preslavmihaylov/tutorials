package com.pmihaylov.exercises._02_cache;

public class Hints {
    // Hint #1 - Start by using a plain HashMap and synchronizing the compute function via "synchronized".
    //           This solution is thread-safe but it's still problematic. What's the issue with it?
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // Hint #1 Solution - See solution.WrongMemoizer1. The problem is that only a single value can be calculated at a time. We can do better...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // Hint #2 - Try using a ConcurrentHashMap in your second try without synchronizing.
    //           Is there an issue with atomic compound actions?
    //           What happens if a request comes while a result is being calculated?
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // Hint #2 Solution - See solution.WrongMemoizer2.
    //                    The problem with this approach is that a request which comes while a result is being calculated
    //                    is going to invoke "next.compute(arg)" again.
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // Hint #3 - How can we store something in the cache which is not calculated yet?
    //           In other words, it's going to be calculated in the "Future" ;)
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // ...
    // Hint #3 Solution - Use a concurrent hash map which stores "Future<V>" instead of "V".
    //                    That way, incoming requests will detect that a result is being calculated at the moment & wait on it.
    //                    Still not thread-safe after you run the tests?
    //                    Be careful of atomic compound actions again!
    //                    See solution.WrongMemoizer3 if you get stuck.
}
